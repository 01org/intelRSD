#!/bin/sh
# Copyright (c) 2015-2016 Intel Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
### BEGIN INIT INFO
# Provides:             orientdb
# Required-Start:       $remote_fs $network
# Required-Stop:        $remote_fs $network
# Should-Start:         $named
# Should-Stop:          $named
# Default-Start:        2 3 4 5
# Default-Stop:         0 1 6
# Short-Description:    OrientDB
# Description:          Custom OrientDB startup/shutdown script
### END INIT INFO

if [ `id -u` -ne 0 ]; then
	echo "You need root privileges to run this script"
	exit 1
fi

NAME=orientdb
DESC="OrientDB Database"
ORIENTDB_USER="podm"
ORIENTDB_GROUP="$ORIENTDB_USER"
ORIENTDB_HOME="/opt/pod-manager/orientdb"
ORIENTDB_BINDIR="$ORIENTDB_HOME/bin"
ORIENTDB_STDOUT="$ORIENTDB_HOME/log/orientdb.log"
ORIENTDB_STDERR="$ORIENTDB_HOME/log/orientdb.err"
ORIENTDB_PIDDIR="/run/$NAME"
ORIENTDB_PIDFILE="$ORIENTDB_PIDDIR/$NAME.pid"
ORIENTDB_STARTUP_SCRIPT="server.sh"
ORIENTDB_SHUTDOWN_SCRIPT="shutdown.sh"
STARTUP_WAIT=10

. /lib/lsb/init-functions

if [ -z "$JAVA" ]; then
	if [ -n "$JAVA_HOME" ]; then
		JAVA="$JAVA_HOME/bin/java"
	else
		JAVA="java"
	fi
fi

check_status() {
	pidofproc -p "$ORIENTDB_PIDFILE" "$JAVA" >/dev/null 2>&1
}

wait_for_startup() {
    count=0
    while [ $count -le $STARTUP_WAIT ]
    do
        grep 'is active. \[OServer\]' "$ORIENTDB_STDERR" >/dev/null 2>&1
        if [ $? -eq 0 ] ; then
            break
        fi
        sleep 1
        count=$((count + 1));
    done
}

case "$1" in
    start)
        log_daemon_msg "Starting $DESC" "$NAME"
        check_status
        status_start=$?
        if [ $status_start -eq 3 ]; then
            mkdir -p "$ORIENTDB_PIDDIR"
            chown "$ORIENTDB_USER" "$ORIENTDB_PIDDIR" || true

            start-stop-daemon --start --user "$ORIENTDB_USER" \
            --chuid "$ORIENTDB_USER" --chdir "$ORIENTDB_BINDIR" \
            --pidfile "$ORIENTDB_PIDFILE" --make-pidfile \
            --exec "$ORIENTDB_STARTUP_SCRIPT" -- 1> "$ORIENTDB_STDOUT" 2> "$ORIENTDB_STDERR" &

            wait_for_startup

            chown "$ORIENTDB_USER:$ORIENTDB_GROUP" "$ORIENTDB_STDOUT" "$ORIENTDB_STDERR" || true

            if check_status; then
                log_end_msg 0
            else
                log_end_msg 1
            fi

        elif [ $status_start -eq 1 ]; then
		    log_failure_msg "$DESC is not running but $ORIENTDB_PIDFILE exists"
		    exit 1
	    elif [ $status_start -eq 0 ]; then
		    log_success_msg "$DESC (already running)"
	    fi
        ;;
    stop)
        check_status
        status_stop=$?
        if [ $status_stop -eq 0 ]; then
            log_daemon_msg "Stopping $DESC" "$NAME"

            start-stop-daemon --start --chuid "$ORIENTDB_USER" \
            --chdir "$ORIENTDB_BINDIR" \
            --exec "$ORIENTDB_SHUTDOWN_SCRIPT" --  1>> "$ORIENTDB_STDOUT" 2>> "$ORIENTDB_STDERR"

            rm -f "$ORIENTDB_PIDFILE"

            log_end_msg 0
        elif [ $status_stop -eq 1 ]; then
            log_action_msg "$DESC is not running but $ORIENTDB_PIDFILE exists, cleaning up"
		    rm -f "$ORIENTDB_PIDFILE"
        elif [ $status_stop -eq 3 ]; then
            log_action_msg "$DESC is not running"
        fi
        ;;
    restart|force-reload)
    	check_status
	    status_restart=$?
	    if [ $status_restart -eq 0 ]; then
		    $0 stop
	    fi
	    $0 start
        ;;
    status)
    	check_status
        status=$?
        if [ $status -eq 0 ]; then
            read pid < "$ORIENTDB_PIDFILE"
            log_action_msg "$DESC is running with pid $pid"
            exit 0
        elif [ $status -eq 1 ]; then
            log_action_msg "$DESC is not running and $ORIENTDB_PIDFILE exists"
            exit 1
        elif [ $status -eq 3 ]; then
            log_action_msg "$DESC is not running"
            exit 3
        else
            log_action_msg "Unable to determine $NAME status"
            exit 4
        fi
        ;;
    *)
        log_action_msg "Usage: $0 start|stop|restart|force-reload|status"
        exit 2
        ;;
esac

exit 0
